Assignment
<assignment>
<variable>
  <var_type> </var_type>
  <var_name></var_name>
</variable>
<value>
  <expression>
  // constant | variable (operator variable)* | functioncall() | 
  </expression>
</assignment>
</value>
If condition
  <if>
    <condition> <expression> </expression> </condition>
    <body>
    </body>
  
  <else>
    <body>
    </body>

For loop
<for_loop>
  <loop_initialisation>
    <assignment>
    .
    .
  </loop_initialisation>
  <loop_condition>
    <expression>
    </expression>
  <loop_condition>
  <loop_update>
    <assignment>
    </assignment>
  </loop_update>

Function
<function>
  <func_name> </func_name>
  <func_return> </func_return>
  <func_arg> 
      <func_arg_name> <func_arg_name>
      <func_arg_type> </func_arg_type>
  </func_arg>
  .
  .
  .
  <body> 

  </body>
</function>
Print Statement
<print>    </print>
Input Statement
<input> </input>
Expressions

While loop
<while_loop>
  <expression> </expression>
  <body> </body>

</while_loop>


<structure> 
  <struct_elem>
    <struct_elem_type> </struct_elem_type>
    <struct_elem_name> </struct_elem_name>
  </struct_elem>
  .
  .
  .
  <struct_instance>
     <struct_instance_type> </struct_instance_type>
     <struct_instance_name> </struct_instance_name>
  </struct_instance>
  .
  .
  .
</structure>

#Indicates a variable defined within structure (eg: f.i)
<struct_variable>
   <struct_instance_name> </struct_instance_name>
   <struct_elem_name> </struct_elem_name>
</struct_variable>

<union>
<union_elem>
    <union_elem_type> </union_elem_type>
    <union_elem_name> </union_elem_name>
  </union_elem>
  .
  .
  .
  <union_instance>
     <union_instance_type> </union_instance_type>
     <union_instance_name> </union_instance_name>
  </union_instance>
  .
  .
  .
</union>

#Indicates a variable defined within union
<union_variable>
   <union_instance_name> </union_instance_name>
   <union_elem_name> </union_elem_name>
</union_variable>
# hash-define in C
<define>  
 <define_variable> </define_variable>
 <define_value> </define_value>
 #or 
 <expression> </expression>
#define arrays

#linked list 
#define default names for linked list elements if not mentioned

<linked_list>
  <linked_list_name> </linked_list_name>
  <linked_list_variable>
     <linked_list_variable_type> </linked_list_variable_type>
     <linked_list_variable_name> <linked_list_variable_name>
  </linked_list_variable>
  .
  .
  .
  <linked_list_node> 
     <linked_list_node_name> </linked_list_node_name>
     .
     .
     .

  </linked_list_node>
</linked_list>

<linked_list_var>
  <linked_list_name> </linked_list_name>
  <linked_list_variable_name> </linked_list_variable_name>
</linked_list_var>